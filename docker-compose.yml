version: '3'

services:
  mongo:
    container_name: MongoDB
    image: mongo:latest
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - mern-network

  server:
    container_name: Express
    build: ./server
    ports:
      - "3001:3001"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:${MONGO_PORT}/docker-tp
    networks:
      - mern-network

  client:
    container_name: React
    build: ./client
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    networks:
      - mern-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: Elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTIC_PORT}:9200"
    networks:
      - mern-network

  logstash:
    container_name: Logstash
    image: docker.elastic.co/logstash/logstash:8.9.0
    volumes:
      - ./logstash/config/logstash.conf:/logstash_dir/logstash.conf
    command: logstash -f /logstash_dir/logstash.conf
    ports:
      - "${LOGSTASH_PORT}:5000"
    depends_on:
      - elasticsearch
    networks:
      - mern-network

  kibana:
    container_name: Kibana
    image: docker.elastic.co/kibana/kibana:8.9.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "${KIBANA_PORT}:5601"
    depends_on:
      - elasticsearch
    networks:
      - mern-network

volumes:
  mongo-data:
    driver: local
  elastic-data:
    driver: local

networks:
  mern-network:
    driver: bridge
